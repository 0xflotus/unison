use Optional None Some

uncons : [a] -> Optional (a, [a])
uncons a = case at 0 a of
  None -> None
  Some hd -> Some (hd, drop 1 a)

merge : (a -> a -> Boolean) -> [a] -> [a] -> [a]
merge lte a b =
  go acc a b = case (uncons a, uncons b) of
    (None, _) -> acc ++ b
    (_, None) -> acc ++ a
    (Some (h1,t1), Some (h2,t2)) ->
      if h1 `lte` h2 then go (acc `snoc` h1) (drop 1 a) b
      else go (acc `snoc` h2) a (drop 1 b)
  go [] a b

-- let's make sure it works
> merge (<) [1,3,4,99,504,799] [0,19,22,23]

isEmpty : [a] -> Boolean
isEmpty a = size a == 0

halve : [a] -> Optional ([a], [a])
halve as =
  if isEmpty as then None
  else Some (take (size as / 2) as, drop (size as / 2) as)

sort : (a -> a -> Boolean) -> [a] -> [a]
sort lte as = case halve as of
  None -> as
  Some (left, right) ->
    l = sort lte left
    r = sort lte right
    merge lte l r

-- let's make sure it works

> sort (<) [3,2,1,1,2,3,9182,1,2,34,1,23]

-- > sort (<) ["Dave", "Carol", "Eve", "Alice", "Bob", "Francis", "Hal", "Illy", "Joanna", "Greg", "Karen"]

-- > sort (<) [3,2,1,1,2,3,9182,1,2,34,1,"oops"]

-- > merge (<) [1,4,5,90,102] ["a", "b"]

--- 

java.lang.StackOverflowError
	at org.unisonweb.compilation.package$$anonfun$compile$29.apply(compilation.scala:1087)
	at org.unisonweb.Value$Lambda.apply(Param.scala:79)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compileStaticFullySaturatedNontailCall$1(compilation.scala:439)
	at org.unisonweb.compilation.package$$anonfun$compileStaticFullySaturatedNontailCall$4.apply(compilation.scala:436)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$5(compilation.scala:1452)
	at org.unisonweb.compilation.package$$anonfun$compile$25.apply(compilation.scala:1015)
	at org.unisonweb.Value$Lambda.apply(Param.scala:79)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compileStaticFullySaturatedNontailCall$1(compilation.scala:439)
	at org.unisonweb.compilation.package$$anonfun$compileStaticFullySaturatedNontailCall$4.apply(compilation.scala:436)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$12(compilation.scala:1067)
	at org.unisonweb.compilation.package$$anonfun$compile$28.apply(compilation.scala:1066)
	at org.unisonweb.Value$Lambda.apply(Param.scala:79)
	at org.unisonweb.compilation.package$.invokeDynamic$1(compilation.scala:673)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$dynamicCall$1(compilation.scala:750)
	at org.unisonweb.compilation.package$$anonfun$dynamicCall$2.apply(compilation.scala:714)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$13(compilation.scala:1452)
	at org.unisonweb.compilation.package$$anonfun$compile$29.apply(compilation.scala:1087)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compileMatchCase$4(compilation.scala:340)
	at org.unisonweb.compilation.package$$anonfun$compileMatchCase$7.apply(compilation.scala:334)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$10(compilation.scala:1061)
	at org.unisonweb.compilation.package$$anonfun$sequenceCases$1$1.apply(compilation.scala:1058)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$12(compilation.scala:1070)
	at org.unisonweb.compilation.package$$anonfun$compile$28.apply(compilation.scala:1066)
	at org.unisonweb.Value$Lambda.apply(Param.scala:79)
	at org.unisonweb.compilation.package$.invokeDynamic$1(compilation.scala:673)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$dynamicCall$1(compilation.scala:750)
	at org.unisonweb.compilation.package$$anonfun$dynamicCall$2.apply(compilation.scala:714)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$13(compilation.scala:1452)
	at org.unisonweb.compilation.package$$anonfun$compile$29.apply(compilation.scala:1087)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$13(compilation.scala:1102)
	at org.unisonweb.compilation.package$$anonfun$compile$29.apply(compilation.scala:1087)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compileMatchCase$4(compilation.scala:340)
	at org.unisonweb.compilation.package$$anonfun$compileMatchCase$7.apply(compilation.scala:334)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$10(compilation.scala:1061)
	at org.unisonweb.compilation.package$$anonfun$sequenceCases$1$1.apply(compilation.scala:1058)
	at org.unisonweb.compilation.package$.org$unisonweb$compilation$package$$$anonfun$compile$12(compilation.scala:1070)
	at org.unisonweb.compilation.package$$anonfun$compile$28.apply(compilation.scala:1066)
	at org.unisonweb.Value$Lambda.apply(Param.scala:79)

