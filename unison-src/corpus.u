-- a comment
{- {-
  a multi-line nested comment
-} still a comment
-}

type Optional a = None | Some a

Optional.isEmpty : âˆ€ a . Optional a -> Boolean
Optional.isEmpty o = case o of
  Optional.None -> true
  Optional.Some hi@_ -> false


(|>) : forall a b . a -> (a -> b) -> b
a |> f = f a

let
  foo : Nat -> Nat
  foo x = case if x >_Nat 1 then x +_Nat 1 else 0
  x = [1.,2.5]
  "let case if"
    |> Text.size
    |> Stream.from-int64
    |> Stream.take 10
    |> Stream.fold-left -0 (+_Int64)
    |> Stream.fold-left-0 (+_Int64)
    |> Optional.Some
  +1.0
